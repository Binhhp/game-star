{"version":3,"sources":["Component/StartGame.js","Component/PlayAgain.js","Component/PLayNumber.js","Component/MatchScine.js","Component/StarsDisplay.js","App.js","index.js"],"names":["StartGame","props","className","title","type","onClick","startMatchGame","PlayAgain","style","color","gameStatus","exit","colors","available","used","wrong","candidate","PlayNumber","backgroundColor","status","run","number","utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","StarsDisplay","count","map","startId","Game","useState","stars","setStars","availableNums","setAvailableNums","candidateNums","setCandicateNums","secondTime","setSecondTime","useEffect","timerId","setTimeout","clearTimeout","setGameStar","newCandidateNums","newAvailableNums","filter","n","includes","useGameStar","candidateAreWrong","onNumberClick","currentStatus","cn","startNewGame","node","App","gameId","setGameId","start","setStart","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bca782a.chunk.js","sourcesContent":["function StartGame(props) {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"body\">\r\n          <div className=\"container\">\r\n            <div className=\"game-name\">{ props.title }</div>\r\n            <div className=\"game-play\">\r\n              <button className=\"btn btn-default\" type=\"submit\" onClick = { props.startMatchGame }>\r\n                Play Game</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default StartGame; ","//button play again\r\nfunction PlayAgain(props){\r\n    return(\r\n        <div className=\"game-done\">\r\n            <div \r\n                className = \"message\"\r\n                style={{ color: props.gameStatus === 'lost' ? 'red' : 'green'}}>\r\n                {props.gameStatus === 'lost' ? 'Game over' : 'Win'}\r\n            </div>\r\n            <button className=\"btn btn-default\" onClick={ props.onClick } className=\"play-again\">Play again</button>\r\n            <button className=\"btn btn-default\" onClick = { props.exit } className=\"exit\">Exit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayAgain;","//node 1-9\r\nconst PlayNumber = props => (\r\n    <button \r\n      style= {{ backgroundColor: colors[props.status] }}run \r\n      className=\"number\" \r\n      //nhận giá trị onClick từ nút cha\r\n      onClick={() => props.onClick(props.number, props.status)}>\r\n      {props.number}\r\n    </button>\r\n);\r\n\r\n// Color Theme\r\nconst colors = {\r\n    available: 'lightgray',//xam\r\n    used: 'lightgreen',//xanh la cay\r\n    wrong: 'lightcoral',//do\r\n    candidate: 'deepskyblue',//xanh da troi\r\n};\r\n  \r\nexport default PlayNumber;","// Math science\r\nconst utils = {\r\n    // Tong cua day\r\n    sum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n  \r\n    // tạo một mảng số giữa tối thiểu và tối đa (bao gồm các cạnh)\r\n    range: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n  \r\n    // chọn một số ngẫu nhiên giữa tối thiểu và tối đa (bao gồm các cạnh)\r\n    random: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n  \r\n    // Cho một mảng số và giá trị tối đa...\r\n    // Chọn một tổng ngẫu nhiên (<max) từ tập hợp tất cả các tổng có sẵn trong arr\r\n    randomSumIn: (arr, max) => {\r\n      const sets = [[]];\r\n      const sums = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n          const candidateSet = sets[j].concat(arr[i]);\r\n          const candidateSum = utils.sum(candidateSet);\r\n          if (candidateSum <= max) {\r\n            sets.push(candidateSet);\r\n            sums.push(candidateSum);\r\n          }\r\n        }\r\n      }\r\n      return sums[utils.random(0, sums.length - 1)];\r\n    },\r\n  };\r\n\r\n  export default utils;","// STAR MATCH - Starting Template\r\n//star\r\nimport utils from \"./MatchScine\";\r\nconst StarsDisplay = props => (\r\n    <>\r\n      { utils.range(1, props.count).map(startId => <div key= { startId } className=\"star\"></div>) }\r\n    </>\r\n  );\r\n\r\nexport default StarsDisplay;","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport StartGame from './Component/StartGame';\r\nimport PlayAgain from './Component/PlayAgain';\r\nimport PlayNumber from './Component/PLayNumber';\r\nimport StarsDisplay from './Component/StarsDisplay';\r\nimport utils from \"./Component/MatchScine\";\r\n\r\nfunction App() {\r\n  const [gameId, setGameId] = useState(1);\r\n  const [start, setStart] = useState(false);\r\n  const title = \"Game star\";\r\n  const toggleItem = () => {\r\n      setStart(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {start === true ? <Game key={ gameId } startNewGame={() => setGameId(gameId + 1)} exit = {() => setStart(false) }/> \r\n                      : <StartGame startMatchGame={ toggleItem } title={ title } />}\r\n    </div>\r\n  );\r\n}\r\n\r\n//custom hook\r\nconst useGameStar = () => {\r\n  //số sao\r\nconst [stars, setStars] = useState(utils.random(1, 9));\r\n//dãy số chưa chọn\r\nconst [availableNums, setAvailableNums] = useState(utils.range(1, 9));\r\n//mảng 2 số được chọn\r\nconst [candidateNums, setCandicateNums] = useState([]);\r\n//play again\r\nconst [secondTime, setSecondTime] = useState(10);\r\n//Dếm ngược thời gian sử dụng effect hooks\r\nuseEffect(() => {\r\n  if(secondTime > 0 && availableNums.length > 0){\r\n    const timerId = setTimeout(() => {\r\n      setSecondTime(secondTime - 1);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timerId);\r\n  }\r\n});\r\n//setup lại mảng chưa chọn và đã chọn\r\nconst setGameStar = (newCandidateNums) => {\r\n  if(utils.sum(newCandidateNums) !== stars){\r\n    setCandicateNums(newCandidateNums);\r\n  }\r\n  else{\r\n      //setup lại mảng chưa chọn\r\n      const newAvailableNums = availableNums.filter(\r\n            n => !newCandidateNums.includes(n));\r\n      setAvailableNums(newAvailableNums);\r\n      //setup lại số sao(random)\r\n      setStars(utils.randomSumIn(newAvailableNums, 9));\r\n      //setup lại mảng đã chọn\r\n      setCandicateNums([]);\r\n  }\r\n};\r\n\r\nreturn {stars, availableNums, candidateNums, secondTime, setGameStar};\r\n};\r\n\r\n//custom hook\r\nconst Game = (props) => {\r\n  const {\r\n    stars,\r\n    availableNums,\r\n    candidateNums, \r\n    secondTime, \r\n    setGameStar\r\n  } = useGameStar();\r\n//người chơi chọn giá trị đúng hay sai trả về bool\r\n  const candidateAreWrong = utils.sum(candidateNums) > stars;\r\n  const gameStatus = availableNums.length === 0 \r\n        ? 'won' : \r\n        secondTime === 0 ? 'lost' : 'active';\r\n\r\n  //kiểm tra giá trị số đã chọn\r\n  //num số nút\r\n  const numberStatus = number => {\r\n      //kiểm tra trong dãy số chưa chọn đã tồn tại số chọn chưa\r\n      if(!availableNums.includes(number)){\r\n        //so da choi\r\n        return 'used';\r\n      }\r\n      //kiểm tra số chọn có trong dãy số đã chọn\r\n      if(candidateNums.includes(number)){\r\n        //kiểm tra tổng số đã chọn/ true => sai(đổ) | false => cần chọn thêm giá trị để đúng với số sao\r\n        return candidateAreWrong ? 'wrong' : 'candidate';\r\n      }\r\n      //chưa chọn\r\n      return 'available';\r\n  };\r\n\r\n  //number: props.number | currentStatus: props.status\r\n  const onNumberClick = (number, currentStatus) => {\r\n      if(currentStatus === 'used' || gameStatus !== 'active'){\r\n        return;\r\n      }\r\n\r\n      const newCandidateNums = \r\n            //kiểm tra status nếu màu xám chưa chọn true => mảng số đã chọn thêm giá trị nút đó\r\n            //false => \r\n            currentStatus === 'available' ? \r\n                candidateNums.concat(number) : candidateNums.filter(cn =>  cn !== number);//loại bỏ số đã chọn\r\n      \r\n      setGameStar(newCandidateNums);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"help\">\r\n        Pick 1 or more numbers that sum to the number of stars\r\n      </div>\r\n      <div className=\"body\">\r\n        <div className=\"left\">\r\n            { gameStatus !== 'active' \r\n            ? ( <PlayAgain onClick = { props.startNewGame } gameStatus = { gameStatus } exit= { props.exit } /> ) \r\n            : ( <StarsDisplay count ={ stars } /> )}\r\n        </div>\r\n        <div className=\"right\">\r\n          { utils.range(1, 9).map(node => \r\n              <PlayNumber \r\n                status = { numberStatus(node) }\r\n                onClick = { onNumberClick }\r\n                key={node} \r\n                number={node} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"timer\">Time Remaining: {secondTime}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default App;\r\n","\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}